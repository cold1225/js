{
  "version": 3,
  "sources": ["../src/index.ts", "../../shared/src/index.ts", "../../runtime-core/src/vnode.ts", "../../runtime-core/src/renderer.ts", "../../runtime-core/src/h.ts", "../src/nodeOps.ts", "../src/modules/attr.ts", "../src/modules/class.ts", "../src/modules/event.ts", "../src/modules/style.ts", "../src/patchProps.ts"],
  "sourcesContent": ["import { createRenderer } from \"@vue/runtime-core\";\r\nimport { nodeOps } from \"./nodeOps\";\r\nimport { patchProp } from \"./patchProps\";\r\n\r\n\r\nconst renderOptions = Object.assign(nodeOps, { patchProp })\r\n\r\n\r\n\r\nexport function render(vnode, container) {\r\n    return createRenderer(renderOptions).render(vnode, container)\r\n}\r\n\r\nexport * from '@vue/runtime-core'", "export const isObject = (target) => typeof target === 'object' && target !== null\r\n\r\nexport const isString = (target) => typeof target === 'string'\r\nexport const isNumber = (target) => typeof target === 'number'\r\nexport const isFunction = (target) => typeof target === 'function'\r\nexport const isArray = Array.isArray\r\nexport const assign = Object.assign\r\n\r\nexport const enum ShapeFlags { // vue3\u63D0\u4F9B\u7684\u5F62\u72B6\u6807\u8BC6\r\n    ELEMENT = 1,\r\n    FUNCTIONAL_COMPONENT = 1 << 1,\r\n    STATEFUL_COMPONENT = 1 << 2,\r\n    TEXT_CHILDREN = 1 << 3,\r\n    ARRAY_CHILDREN = 1 << 4,\r\n    SLOTS_CHILDREN = 1 << 5,\r\n    TELEPORT = 1 << 6,\r\n    SUSPENSE = 1 << 7,\r\n    COMPONENT_SHOULD_KEEP_ALIVE = 1 << 8,\r\n    COMPONENT_KEPT_ALIVE = 1 << 9,\r\n    COMPONENT = ShapeFlags.STATEFUL_COMPONENT | ShapeFlags.FUNCTIONAL_COMPONENT\r\n}\r\n// \u4F4D\u8FD0\u7B97\u9002\u5408\u6743\u9650\u6821\u9A8C & | ", "import { isArray, isString, ShapeFlags } from \"@vue/shared\";\r\n\r\nexport const Text = Symbol('Text')\r\nexport function isVnode(value) {\r\n    return !!(value && value.__v_isVnode)\r\n}\r\n\r\nexport function isSameVnode(n1, n2) {\r\n    return (n1.type === n2.type) && (n1.key === n2.key)\r\n}\r\n\r\nexport function createVnode(type, props, children = null) {\r\n    let shapeFlag = isString(type) ? ShapeFlags.ELEMENT : 0\r\n\r\n    // \u865A\u62DFDOM\u76F8\u5F53\u4E8E\u4E00\u4E2A\u7F13\u5B58\u533A\r\n    const vnode = {\r\n        type,\r\n        props,\r\n        children,\r\n        el: null,\r\n        key: props?.key,\r\n        __v_isVnode: true,\r\n        shapeFlag\r\n    }\r\n\r\n    if (children) {\r\n        let type = 0\r\n        if (isArray(children)) {\r\n            type = ShapeFlags.ARRAY_CHILDREN\r\n        } else {\r\n            children = String(children)\r\n            type = ShapeFlags.TEXT_CHILDREN\r\n        }\r\n        vnode.shapeFlag |= type\r\n    }\r\n    return vnode\r\n}", "import { isString, ShapeFlags } from \"@vue/shared\"\r\nimport { createVnode, isSameVnode, Text } from \"./vnode\"\r\n\r\nexport function createRenderer(renderOptions) {\r\n    const {\r\n        insert: hostInsert,\r\n        remove: hostRemove,\r\n        setElementText: hostSetElementText,\r\n        setText: hostSetText,\r\n        parentNode: hostParentNode,\r\n        nextSibling: hostNextSibling,\r\n        createElement: hostCreateElement,\r\n        createText: hostCreateText,\r\n        patchProp: hostPatchProp,\r\n    } = renderOptions\r\n    const normalize = (children, i) => {\r\n        if (isString(children[i])) {\r\n            children[i] = createVnode(Text, null, children[i])\r\n        }\r\n        return children[i]\r\n    }\r\n\r\n    const mountChildren = (children, container) => {\r\n        for(let i = 0; i < children.length; i++) {\r\n            const child = normalize(children, i)\r\n            patch(null, child, container)\r\n        }\r\n    }\r\n    const mountElement = (vnode, container, anchor) => {\r\n        const { type, props, children, shapeFlag } = vnode\r\n        const el = vnode.el = hostCreateElement(type)\r\n        if (props) {\r\n            for(let key in props) {\r\n                hostPatchProp(el, key, null, props[key])\r\n            }\r\n        }\r\n        if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n            hostSetElementText(el, children)\r\n        } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n            mountChildren(children, el)\r\n        }\r\n        hostInsert(el, container, anchor)\r\n    }\r\n\r\n    const processText = (n1, n2, container) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container)\r\n        } else {\r\n            // \u6587\u672C\u7684\u5185\u5BB9\u53D8\u5316\u4E86\r\n            const el = n2.el = n1.el\r\n            if (n1.children !== n2.children) {\r\n                hostSetText(el, n2.children)\r\n            }\r\n        }\r\n    }\r\n    const patchProps = (oldProps, newProps, el) => {\r\n        for(let key in newProps) {\r\n            hostPatchProp(el, key, oldProps[key], newProps[key])\r\n        }\r\n        for(let key in oldProps) {\r\n            if (newProps[key] == null) {\r\n                hostPatchProp(el, key, oldProps[key], null)\r\n            }\r\n        }\r\n    }\r\n\r\n    const unmountChildren = (children) => {\r\n        for(let i = 0; i < children.length; i++) {\r\n            unmount(children[i])\r\n        }\r\n    }\r\n    const patchKeyedChildren = (c1, c2, el) => {\r\n        let i = 0, e1 = c1.length - 1, e2 = c2.length - 1\r\n        // sync from start\r\n        while(i <= e1 && i <= e2) {\r\n            const n1 = c1[i], n2 = c2[i]\r\n            if (isSameVnode(n1, n2)) {\r\n                patch(n1, n2, el)\r\n            } else {\r\n                break\r\n            }\r\n            i++\r\n        }\r\n        // sync from end\r\n        while(i <= e1 && i <= e2) {\r\n            const n1 = c1[e1], n2 = c2[e2]\r\n            if (isSameVnode(n1, n2)) {\r\n                patch(n1, n2, el)\r\n            } else {\r\n                break\r\n            }\r\n            e1--\r\n            e2--\r\n        }\r\n        /**\r\n         * common sequence + mount\r\n         * i\u6BD4e1\u5927 \u8BF4\u660E\u6709\u65B0\u589E\u7684\r\n         * i\u548Ce2\u4E4B\u95F4\u7684\u662F\u65B0\u589E\u7684\u90E8\u5206\r\n         */\r\n        // \u6709\u4E00\u65B9\u5168\u90E8\u6BD4\u8F83\u5B8C\u6BD5\u4E86\uFF0C\u8981\u4E48\u5C31\u5220\u9664\uFF0C\u8981\u4E48\u5C31\u6DFB\u52A0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                while(i <= e2) {\r\n                    const nextPos = e2 + 1\r\n                    const anchor = nextPos < c2.length ? c2[nextPos].el : null\r\n                    patch(null, c2[i++], el, anchor)\r\n                }\r\n            }\r\n        } else if (i > e2) {\r\n            if (i <= e1) {\r\n                while(i <= e1) {\r\n                    unmount(c1[i++])\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * common sequence + unmount\r\n         * i\u6BD4e2\u5927\u8BF4\u660E\u6709\u5378\u8F7D\u7684\r\n         * i\u5230e1\u4E4B\u95F4\u7684\u5C31\u662F\u8981\u5378\u8F7D\u7684\r\n         */\r\n\r\n        // \u4F18\u5316\u5B8C\u6BD5\r\n        // \u4E71\u5E8F\u6BD4\u5BF9\r\n        let s1 = i, s2 = i\r\n        const keyToNewIndexMap = new Map()\r\n        for(let i = s2; i <= e2; i++) {\r\n            keyToNewIndexMap.set(c2[i].key, i)\r\n        }\r\n\r\n        const toBePatched = e2 - s2 + 1\r\n        // 0\u662F\u65B0\u589E\r\n        const map = new Array(toBePatched).fill(0)\r\n        for(let i = s1; i <= e1; i++) {\r\n            const oldChild = c1[i]\r\n            const newIndex = keyToNewIndexMap.get(oldChild.key)\r\n            if (newIndex == undefined) {\r\n                unmount(oldChild)\r\n            } else {\r\n                map[newIndex - s2] = i + 1\r\n                patch(oldChild, c2[newIndex], el)\r\n            }\r\n        }\r\n        console.log(map)\r\n\r\n        for(let i = toBePatched - 1; i >= 0; i--) {\r\n            let index = i + s2\r\n            const current = c2[index]\r\n            const anchor = index + 1 < c2.length ? c2[index + 1].el : null\r\n            if (map[i] === 0) {\r\n                patch(null, current, el, anchor)\r\n            } else {\r\n                // \u6839\u636Emap\u7528\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u8FDB\u884C\u4F18\u5316 \u51CF\u5C11\u79FB\u52A8\u6B21\u6570\r\n                hostInsert(current.el, el, anchor)\r\n            }\r\n        }\r\n    }\r\n\r\n    const patchChildren = (n1, n2, el) => {\r\n        const c1 = n1 && n1.children\r\n        const c2 = n2 && n2.children\r\n        const prevShapeFlag = n1.shapeFlag\r\n        const shapeFlag = n2.shapeFlag\r\n        // \u6587\u672C \u7A7A \u6570\u7EC4\r\n\r\n        if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n            if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n                unmountChildren(c1)\r\n            }\r\n            if (c1 !== c2) {\r\n                hostSetElementText(el, c2)\r\n            }\r\n        } else {\r\n            if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n                if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n                    // diff\u7B97\u6CD5\r\n                    patchKeyedChildren(c1, c2, el)\r\n                } else {\r\n                    unmountChildren(c1)\r\n                }\r\n            } else {\r\n                if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n                    hostSetElementText(el, '')\r\n                }\r\n                if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n                    mountChildren(c2, el)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const patchElement = (n1, n2) => {\r\n        const el = n2.el = n1.el\r\n        const oldProps = n1.props || {}\r\n        const newProps = n2.props || {}\r\n\r\n        patchProps(oldProps, newProps, el)\r\n\r\n        patchChildren(n1, n2, el)\r\n    }\r\n    const processElement = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor)\r\n        } else {\r\n            patchElement(n1, n2)\r\n        }\r\n    }\r\n\r\n    const patch = (n1, n2, container, anchor = null) => {\r\n        if (n1 === n2) return\r\n        if (n1 && !isSameVnode(n1, n2)) {\r\n            unmount(n1)\r\n            n1 = null\r\n        }\r\n\r\n        const { type, shapeFlag } = n2\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container)\r\n                break;\r\n        \r\n            default:\r\n                if (shapeFlag & ShapeFlags.ELEMENT) {\r\n                    // \u521D\u6B21\u6E32\u67D3/\u7EC4\u4EF6\u7684\u521D\u6B21\u6E32\u67D3\r\n                    processElement(n1, n2, container, anchor)\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const unmount = (vnode) => {\r\n        hostRemove(vnode.el)\r\n    }\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            // \u5378\u8F7D\r\n            if (container._vnode) {\r\n                unmount(container._vnode)\r\n            }\r\n        } else {\r\n            // \u521D\u59CB\u5316/\u66F4 \u65B0\u903B\u8F91\r\n            patch(container._vnode, vnode, container)\r\n        }\r\n        container._vnode = vnode\r\n    }\r\n    return {\r\n        render\r\n    }\r\n}", "import { isArray, isObject } from '@vue/shared';\r\nimport { createVnode, isVnode } from './vnode';\r\nexport function h(type, propsChildren, children) {\r\n    const l = arguments.length\r\n    if (l === 2) {\r\n        if (isObject(propsChildren) && !isArray(propsChildren)) {\r\n            if (isVnode(propsChildren)) {\r\n                return createVnode(type, null, [propsChildren])\r\n            }\r\n            return createVnode(type, propsChildren)\r\n        } else {\r\n            return createVnode(type, null, propsChildren)\r\n        }\r\n    } else {\r\n        if (l > 3) {\r\n            children = Array.from(arguments).slice(2)\r\n        } else if (l === 3 && isVnode(children)) {\r\n            children = [children]\r\n        }\r\n        return createVnode(type, propsChildren, children)\r\n    }\r\n    \r\n}", "export const nodeOps = {\r\n    insert(child, parent, anchor = null) {\r\n        parent.insertBefore(child, anchor)\r\n    },\r\n    remove(child) {\r\n        const parentNode = child.parentNode\r\n        if (parentNode) {\r\n            parentNode.removeChild(child)\r\n        }\r\n    },\r\n    setElementText(el, text) {\r\n        el.textContent = text\r\n    },\r\n    setText(node, text) {\r\n        node.nodeValue = text\r\n    },\r\n    querySelector(selector) {\r\n        return document.querySelector(selector)\r\n    },\r\n    parentNode(node) {\r\n        return node.parentNode\r\n    },\r\n    nextSibling(node) {\r\n        return node.nextSibling\r\n    },\r\n    createElement(tagName) {\r\n        return document.createElement(tagName)\r\n    },\r\n    createText(text) {\r\n        return document.createTextNode(text)\r\n    }\r\n}", "export function patchAttr(el, key, nextValue) {\r\n    if (nextValue) {\r\n        el.setAttribute(key, nextValue)\r\n    } else {\r\n        el.removeAttribute(key)\r\n    }\r\n}", "export function patchClass(el, nextValue) {\r\n    if (nextValue == null) {\r\n        el.removeAttribute(el, 'class')\r\n    } else {\r\n        el.className = nextValue\r\n    }\r\n}", "function createInvoker(value) {\r\n    const invoker = (e) => invoker.value(e)\r\n    invoker.value = value\r\n    return invoker\r\n}\r\n\r\nexport function patchEvent(el, eventName, nextValue) {\r\n    const invokes = el._vei || (el._vei = {})\r\n    const exists = invokes[eventName]\r\n    if (exists && nextValue) {\r\n        exists.value = nextValue\r\n    } else {\r\n        const event = eventName.slice(2).toLowerCase()\r\n        if (nextValue) {\r\n            const invoker = invokes[eventName] = createInvoker(nextValue)\r\n            el.addEventListener(event, invoker)\r\n        } else if (exists) {\r\n            el.removeEventListener(event, exists)\r\n            invokes[eventName] = undefined\r\n        }\r\n    }\r\n}", "export function patchStyle(el, prevValue, nextValue) {\r\n    nextValue = nextValue || {}\r\n    if (prevValue) {\r\n        for(let key in prevValue) {\r\n            if (nextValue[key] == null) {\r\n                el.style[key] = null\r\n            }\r\n        }\r\n    }\r\n    for(let key in nextValue) {\r\n        el.style[key] = nextValue[key]\r\n    }\r\n}", "import { patchAttr } from \"./modules/attr\";\r\nimport { patchClass } from \"./modules/class\";\r\nimport { patchEvent } from \"./modules/event\";\r\nimport { patchStyle } from \"./modules/style\";\r\n\r\nexport function patchProp(el, key, prevValue, nextValue) {\r\n    if (key === 'class') {\r\n        patchClass(el, nextValue)\r\n    } else if (key === 'style') {\r\n        patchStyle(el, prevValue, nextValue)\r\n    } else if (/^on[^a-z]/.test(key)) {\r\n        patchEvent(el, key, nextValue)\r\n    } else {\r\n        patchAttr(el, key, nextValue)\r\n    }\r\n}"],
  "mappings": "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",
  "names": []
}
